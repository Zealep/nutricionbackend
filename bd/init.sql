-- HIBERNATE GENERATED DDL SCRIPT FOR POSTGRESQL

-- Configuración de mensajes de cliente (opcional, para menos ruido en la consola de psql)
SET client_min_messages = WARNING;

-- -----------------------------------------------------------
-- Paso 1: Eliminar restricciones de clave foránea existentes (si las tablas ya existen)
-- Esto es útil para 'create-drop' o 'update' y asegura un estado limpio antes de recrear.
-- Si es la primera vez que creas la BD, estas líneas no harán nada.
-- -----------------------------------------------------------

ALTER TABLE IF EXISTS evaluacion DROP CONSTRAINT IF EXISTS FKe074rvg7a2k5f64985l33bgq1;
ALTER TABLE IF EXISTS evaluacion DROP CONSTRAINT IF EXISTS FK22j4mslc1sl7l22g4aut9jw8g;
ALTER TABLE IF EXISTS evaluacion DROP CONSTRAINT IF EXISTS FKq8jc9ft44jvggwy2v8fm7e2pn;
ALTER TABLE IF EXISTS menu DROP CONSTRAINT IF EXISTS FKhuqo1fw4fdurm7m5doeonvved;
ALTER TABLE IF EXISTS menu_item DROP CONSTRAINT IF EXISTS FKj8j9x5t6j8i00a3ggl1bsck9n;
ALTER TABLE IF EXISTS menu_item DROP CONSTRAINT IF EXISTS FKcdkmv42yhn6udah6ug8rsymfl;
ALTER TABLE IF EXISTS menu_item DROP CONSTRAINT IF EXISTS FKas3fc0fqksthdv7vpb6rpqasr;
ALTER TABLE IF EXISTS paciente_alergia DROP CONSTRAINT IF EXISTS FKpu8omih1hfcvmnhs0okqwgyft;
ALTER TABLE IF EXISTS paciente_alergia DROP CONSTRAINT IF EXISTS FKdd7e0jhbaexvx42v4cij769x9;
ALTER TABLE IF EXISTS paciente_medicamento DROP CONSTRAINT IF EXISTS FK4nl2r6vxoywlox2fobdadj8bf;
ALTER TABLE IF EXISTS paciente_medicamento DROP CONSTRAINT IF EXISTS FKqonlqmo4b64ecoonb23jp779v;
ALTER TABLE IF EXISTS paciente_patologia DROP CONSTRAINT IF EXISTS FKlbkb6ggp0hlypw5grwmja45av;
ALTER TABLE IF EXISTS paciente_patologia DROP CONSTRAINT IF EXISTS FKo0xs27l5rd6gmf59tps9bsgsn;
ALTER TABLE IF EXISTS usuario DROP CONSTRAINT IF EXISTS FKmyv3138vvci6kaq3y5kt4cntu;

-- -----------------------------------------------------------
-- Paso 2: Eliminar tablas existentes (para un esquema limpio)
-- Usar 'CASCADE' para eliminar automáticamente dependencias como vistas o FKs.
-- Si es la primera vez que creas la BD, estas líneas no harán nada.
-- -----------------------------------------------------------

DROP TABLE IF EXISTS alergias CASCADE;
DROP TABLE IF EXISTS composicion_alimento CASCADE;
DROP TABLE IF EXISTS evaluacion CASCADE;
DROP TABLE IF EXISTS medicamentos CASCADE;
DROP TABLE IF EXISTS menu CASCADE;
DROP TABLE IF EXISTS menu_item CASCADE;
DROP TABLE IF EXISTS objetivo CASCADE;
DROP TABLE IF EXISTS paciente CASCADE;
DROP TABLE IF EXISTS paciente_alergia CASCADE;
DROP TABLE IF EXISTS paciente_medicamento CASCADE;
DROP TABLE IF EXISTS paciente_patologia CASCADE;
DROP TABLE IF EXISTS patologias CASCADE;
DROP TABLE IF EXISTS rol CASCADE;
DROP TABLE IF EXISTS tiempo_comida CASCADE;
DROP TABLE IF EXISTS usuario CASCADE;

-- -----------------------------------------------------------
-- Paso 3: Creación de tablas
-- Las columnas se crean en el orden que Hibernate las ha definido.
-- -----------------------------------------------------------

CREATE TABLE alergias (
                          activo BOOLEAN,
                          id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                          descripcion VARCHAR(255),
                          PRIMARY KEY (id)
);

CREATE TABLE composicion_alimento (
                                      acido_folico_ug NUMERIC(6,2),
                                      agua_g NUMERIC(5,2),
                                      calcio_mg NUMERIC(6,2),
                                      carbo_dispo_g NUMERIC(5,2),
                                      carbo_total_g NUMERIC(5,2),
                                      caroteno_tot_ug NUMERIC(7,2),
                                      cenizas_g NUMERIC(5,2),
                                      energia_kcal INTEGER,
                                      energia_kj INTEGER,
                                      fibra_dietaria_g NUMERIC(5,2),
                                      fosforo_mg NUMERIC(6,2),
                                      grasa_total_g NUMERIC(5,2),
                                      hierro_mg NUMERIC(5,2),
                                      niacina_mg NUMERIC(5,2),
                                      potasio_mg NUMERIC(6,2),
                                      prote_anim_g NUMERIC(5,2),
                                      prote_total_g NUMERIC(5,2),
                                      prote_veg_g NUMERIC(5,2),
                                      riboflavina_mg NUMERIC(5,2),
                                      sodio_mg NUMERIC(6,2),
                                      tiamina_mg NUMERIC(7,2),
                                      vitamina_a_tot_ug NUMERIC(7,2),
                                      vitamina_c_mg NUMERIC(5,2),
                                      zinc_mg NUMERIC(5,2),
                                      fecha_creacion TIMESTAMP(6),
                                      fecha_modificacion TIMESTAMP(6),
                                      id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                      codigo VARCHAR(255),
                                      grupo VARCHAR(255),
                                      nombre VARCHAR(255),
                                      usuario_creacion VARCHAR(255),
                                      usuario_modificacion VARCHAR(255),
                                      PRIMARY KEY (id)
);

CREATE TABLE evaluacion (
                            circunfencia_cadera NUMERIC(38,2),
                            circunfencia_cintura NUMERIC(38,2),
                            deficit_calorico NUMERIC(38,2),
                            fecha DATE,
                            gasto_energetico_total NUMERIC(38,2),
                            imc NUMERIC(38,2),
                            masa_muscular NUMERIC(38,2),
                            medida_cuello NUMERIC(38,2),
                            peso NUMERIC(38,2),
                            porcentaje_carbohidratos NUMERIC(38,2),
                            porcentaje_grasa_corporal NUMERIC(38,2),
                            porcentaje_grasas NUMERIC(38,2),
                            porcentaje_proteina NUMERIC(38,2),
                            relacion_cintura_cadera NUMERIC(38,2),
                            talla NUMERIC(38,2),
                            tasa_metabolica_basal NUMERIC(38,2),
                            fecha_creacion TIMESTAMP(6),
                            fecha_modificacion TIMESTAMP(6),
                            id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                            objetivo_id BIGINT NOT NULL,
                            paciente_id BIGINT NOT NULL,
                            usuario_id BIGINT NOT NULL,
                            observaciones VARCHAR(255),
                            usuario_creacion VARCHAR(255),
                            usuario_modificacion VARCHAR(255),
                            PRIMARY KEY (id)
);

CREATE TABLE medicamentos (
                              activo BOOLEAN,
                              id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                              descripcion VARCHAR(255),
                              PRIMARY KEY (id)
);

CREATE TABLE menu (
                      fecha DATE,
                      evaluacion_id BIGINT NOT NULL,
                      fecha_creacion TIMESTAMP(6),
                      fecha_modificacion TIMESTAMP(6),
                      id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                      usuario_creacion VARCHAR(255),
                      usuario_modificacion VARCHAR(255),
                      PRIMARY KEY (id)
);

CREATE TABLE menu_item (
                           cantidad_gramos NUMERIC(38,2),
                           composicion_alimento_id BIGINT NOT NULL,
                           fecha_creacion TIMESTAMP(6),
                           fecha_modificacion TIMESTAMP(6),
                           id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                           menu_id BIGINT NOT NULL,
                           tiempo_comida_id BIGINT NOT NULL,
                           usuario_creacion VARCHAR(255),
                           usuario_modificacion VARCHAR(255),
                           PRIMARY KEY (id)
);

CREATE TABLE objetivo (
                          activo BOOLEAN,
                          calorias FLOAT(53),
                          porcentaje_carbohidratos FLOAT(53),
                          porcentaje_grasas FLOAT(53),
                          porcentaje_proteinas FLOAT(53),
                          fecha_creacion TIMESTAMP(6),
                          fecha_modificacion TIMESTAMP(6),
                          id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                          descripcion VARCHAR(255),
                          nombre VARCHAR(255),
                          usuario_creacion VARCHAR(255),
                          usuario_modificacion VARCHAR(255),
                          PRIMARY KEY (id)
);

CREATE TABLE paciente (
                          activo BOOLEAN,
                          fecha_nacimiento DATE,
                          peso NUMERIC(38,2),
                          talla NUMERIC(38,2),
                          fecha_creacion TIMESTAMP(6),
                          fecha_modificacion TIMESTAMP(6),
                          id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                          apellidos VARCHAR(255),
                          nombres VARCHAR(255),
                          observaciones VARCHAR(255),
                          sexo VARCHAR(255),
                          usuario_creacion VARCHAR(255),
                          usuario_modificacion VARCHAR(255),
                          PRIMARY KEY (id)
);

CREATE TABLE paciente_alergia (
                                  alergia_id BIGINT NOT NULL,
                                  paciente_id BIGINT NOT NULL
);

CREATE TABLE paciente_medicamento (
                                      medicamento_id BIGINT NOT NULL,
                                      paciente_id BIGINT NOT NULL
);

CREATE TABLE paciente_patologia (
                                    paciente_id BIGINT NOT NULL,
                                    patologia_id BIGINT NOT NULL
);

CREATE TABLE patologias (
                            activo BOOLEAN,
                            fecha_creacion TIMESTAMP(6),
                            fecha_modificacion TIMESTAMP(6),
                            id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                            descripcion VARCHAR(255),
                            usuario_creacion VARCHAR(255),
                            usuario_modificacion VARCHAR(255),
                            PRIMARY KEY (id)
);

CREATE TABLE rol (
                     id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                     nombre VARCHAR(255),
                     PRIMARY KEY (id)
);

CREATE TABLE tiempo_comida (
                               activo BOOLEAN,
                               fecha_creacion TIMESTAMP(6),
                               fecha_modificacion TIMESTAMP(6),
                               id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                               nombre VARCHAR(255),
                               usuario_creacion VARCHAR(255),
                               usuario_modificacion VARCHAR(255),
                               PRIMARY KEY (id)
);

CREATE TABLE usuario (
                         activo BOOLEAN,
                         fecha_nacimiento DATE,
                         fecha_creacion TIMESTAMP(6),
                         fecha_modificacion TIMESTAMP(6),
                         id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                         id_rol BIGINT,
                         apellidos VARCHAR(255),
                         celular VARCHAR(255),
                         codigo VARCHAR(255),
                         correo VARCHAR(255),
                         nombres VARCHAR(255),
                         password VARCHAR(255),
                         username VARCHAR(255),
                         usuario_creacion VARCHAR(255),
                         usuario_modificacion VARCHAR(255),
                         PRIMARY KEY (id)
);

-- -----------------------------------------------------------
-- Paso 4: Añadir restricciones de clave foránea
-- Estas se añaden después de que todas las tablas están creadas.
-- -----------------------------------------------------------

ALTER TABLE IF EXISTS evaluacion
    ADD CONSTRAINT FKe074rvg7a2k5f64985l33bgq1
    FOREIGN KEY (objetivo_id)
    REFERENCES objetivo;

ALTER TABLE IF EXISTS evaluacion
    ADD CONSTRAINT FK22j4mslc1sl7l22g4aut9jw8g
    FOREIGN KEY (paciente_id)
    REFERENCES paciente;

ALTER TABLE IF EXISTS evaluacion
    ADD CONSTRAINT FKq8jc9ft44jvggwy2v8fm7e2pn
    FOREIGN KEY (usuario_id)
    REFERENCES usuario;

ALTER TABLE IF EXISTS menu
    ADD CONSTRAINT FKhuqo1fw4fdurm7m5doeonvved
    FOREIGN KEY (evaluacion_id)
    REFERENCES evaluacion;

ALTER TABLE IF EXISTS menu_item
    ADD CONSTRAINT FKj8j9x5t6j8i00a3ggl1bsck9n
    FOREIGN KEY (composicion_alimento_id)
    REFERENCES composicion_alimento;

ALTER TABLE IF EXISTS menu_item
    ADD CONSTRAINT FKcdkmv42yhn6udah6ug8rsymfl
    FOREIGN KEY (menu_id)
    REFERENCES menu;

ALTER TABLE IF EXISTS menu_item
    ADD CONSTRAINT FKas3fc0fqksthdv7vpb6rpqasr
    FOREIGN KEY (tiempo_comida_id)
    REFERENCES tiempo_comida;

ALTER TABLE IF EXISTS paciente_alergia
    ADD CONSTRAINT FKpu8omih1hfcvmnhs0okqwgyft
    FOREIGN KEY (alergia_id)
    REFERENCES alergias;

ALTER TABLE IF EXISTS paciente_alergia
    ADD CONSTRAINT FKdd7e0jhbaexvx42v4cij769x9
    FOREIGN KEY (paciente_id)
    REFERENCES paciente;

ALTER TABLE IF EXISTS paciente_medicamento
    ADD CONSTRAINT FK4nl2r6vxoywlox2fobdadj8bf
    FOREIGN KEY (medicamento_id)
    REFERENCES medicamentos;

ALTER TABLE IF EXISTS paciente_medicamento
    ADD CONSTRAINT FKqonlqmo4b64ecoonb23jp779v
    FOREIGN KEY (paciente_id)
    REFERENCES paciente;

ALTER TABLE IF EXISTS paciente_patologia
    ADD CONSTRAINT FKlbkb6ggp0hlypw5grwmja45av
    FOREIGN KEY (patologia_id)
    REFERENCES patologias;

ALTER TABLE IF EXISTS paciente_patologia
    ADD CONSTRAINT FKo0xs27l5rd6gmf59tps9bsgsn
    FOREIGN KEY (paciente_id)
    REFERENCES paciente;

ALTER TABLE IF EXISTS usuario
    ADD CONSTRAINT FKmyv3138vvci6kaq3y5kt4cntu
    FOREIGN KEY (id_rol)
    REFERENCES rol;

